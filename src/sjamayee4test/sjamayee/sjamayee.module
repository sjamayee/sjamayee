<?php
// $Id: sjamayee.module

function sjamayee_services_resources() {
//require_once("resources/sjamayee_sequence_resource.inc");
  require_once("resources/sjamayee_type_resource.inc");
  require_once("resources/sjamayee_text_resource.inc");
  require_once("resources/sjamayee_model_entity_resource.inc");
  require_once("resources/sjamayee_model_relation_resource.inc");
  require_once("resources/sjamayee_model_parent_relation_resource.inc");
  require_once("resources/sjamayee_model_child_relation_resource.inc");
  require_once("resources/sjamayee_model_attribute_resource.inc");
  require_once("resources/sjamayee_data_entity_resource.inc");
  require_once("resources/sjamayee_data_relation_resource.inc");
  require_once("resources/sjamayee_data_parent_relation_resource.inc");
  require_once("resources/sjamayee_data_child_relation_resource.inc");
  require_once("resources/sjamayee_data_attribute_resource.inc");

  $resources = array();
//$resources += _sjamayee_sequence_resource_definition();
  $resources += _sjamayee_type_resource_definition();
  $resources += _sjamayee_text_resource_definition();
  $resources += _sjamayee_model_entity_resource_definition();
  $resources += _sjamayee_model_relation_resource_definition();
  $resources += _sjamayee_model_parent_relation_resource_definition();
  $resources += _sjamayee_model_child_relation_resource_definition();
  $resources += _sjamayee_model_attribute_resource_definition();
  $resources += _sjamayee_data_entity_resource_definition();
  $resources += _sjamayee_data_relation_resource_definition();
  $resources += _sjamayee_data_parent_relation_resource_definition();
  $resources += _sjamayee_data_child_relation_resource_definition();
  $resources += _sjamayee_data_attribute_resource_definition();
  return $resources;
}

function sjamayee_scramble() {
	//Sjamayee dataset names.
	$S  = 'sja_sequences';
	$T  = 'sja_types';
	$X  = 'sja_texts';
	$ME = 'sja_model_entities';
	$MA = 'sja_model_attributes';
	$MR = 'sja_model_relations';
	$DE = 'sja_data_entities';
	$DA = 'sja_data_attributes';
	$DR = 'sja_data_relations';
	//Clear datasets.
	db_delete($S)->execute();
	db_delete($T)->execute();
	db_delete($X)->execute();
	db_delete($ME)->execute();
	//db_delete($MA)->execute();
	db_delete($MR)->execute();
	db_delete($DE)->execute();
	//db_delete($DA)->execute();
	db_delete($DR)->execute();
		
	//Scramble.
	//_sjamayee_scramble_drupal($S,$T,$X,$ME,$MA,$MR,$DE,$DA,$DR);
	_sjamayee_scramble_project_planning($S,$T,$X,$ME,$MA,$MR,$DE,$DA,$DR);
	//Link Relations.
	//Link all model child relations for one parent by previous and next id's.
	$model_entities = db_query('select * from {'.$ME.'}');
	foreach ($model_entities as $model_entity) {
		//$model_relations = db_select($MR,'mr')->condition('mr.pei',$model_entity->id,'=')->execute();
		$model_relations = db_query('select * from {'.$MR.'} where pei = :pei',array(':pei' => $model_entity->id));
		_sjamayee_link_relations($MR,$model_relations);
	}
	//Link all data child relations for one parent by previous and next id's.
	$data_entities = db_query('select * from {'.$DE.'}');
	foreach ($data_entities as $data_entity) {
		//$data_relations = db_select($DR,'dr')->condition('dr.pei',$data_entity->id,'=')->execute();
		$data_relations = db_query('select * from {'.$DR.'} where pei = :pei',array(':pei' => $data_entity->id));
		_sjamayee_link_relations($DR,$data_relations);
	}
}

function _sjamayee_create_sequence($S) {
	$sequence = db_insert($S)->fields(array('value' => null))->execute();
	return $sequence;
}

function _sjamayee_getSHA2($s) {
  return drupal_hash_base64($s);
}

function _sjamayee_create_id($S) {
	$sequence = _sjamayee_create_sequence($S);
	//**************************************************************** //Get GUID
	//**************************************************************** //Get SHA2/SHA256
  return _sjamayee_getSHA2('__@@SID@@__' . $sequence);
}

function _sjamayee_create_type($S,$T,$fields) {
	$id = _sjamayee_create_id($S);
	db_insert($T)
	  ->fields(array(
		  'id' => $id,
	    'type' => $fields['type'],
	    'code' => $fields['code'],
	    'name' => $fields['name'],
	    //'ver' => $fields['ver'],
	    'description' => $fields['description'],
	    'in_use' => 'Y', //$fields['in_use'],
	    'object' => $fields['object'],
	    //'txi' => $fields['txi'],
	    //'cbi' => 1, //$fields['cbi'],
			//'cat' => $fields['cat'],
	    //'mbi' => 1, //$fields['mbi'],
			//'mat' => $fields['mat'],
	  ))
		->execute();		
	return db_query('select * from {'.$T.'} where id = :id', array(':id' => $id))->fetchObject();
}

function _sjamayee_create_text($S,$X,$fields) {
	$id = _sjamayee_create_id($S);
	db_insert($X)
	  ->fields(array(
		  'id' => $id,
	    //'ver' => $fields['ver'],
	    //'nid' => $fields['nid'],
	    //'pid' => $fields['pid'],
	    'par' => $fields['par'],
	    'seq' => $fields['seq'],
	    'text' => $fields['text'],
	    //'cbi' => 1, //$fields['cbi'],
			//'cat' => $fields['cat'],
	    //'mbi' => 1, //$fields['mbi'],
			//'mat' => $fields['mat'],
	  ))
		->execute();		
	return db_query('select * from {'.$X.'} where id = :id', array(':id' => $id))->fetchObject();
}

function _sjamayee_create_model_entity($S,$ME,$fields) {
	$id = _sjamayee_create_id($S);
	db_insert($ME)
	  ->fields(array(
		  'id' => $id,
	    'name' => $fields['name'],
	    //'ver' => $fields['ver'],
	    'tid' => $fields['tid'],
	    'description' => $fields['description'],
	    //'txi' => $fields['txi'],
	    //'cbi' => 1, //$fields['cbi'],
			//'cat' => $fields['cat'],
	    //'mbi' => 1, //$fields['mbi'],
			//'mat' => $fields['mat'],
	  ))
		->execute();		
	return db_query('select * from {'.$ME.'} where id = :id', array(':id' => $id))->fetchObject();
}

function _sjamayee_create_model_relation($S,$MR,$fields) {
	$id = _sjamayee_create_id($S);
	db_insert($MR)
	  ->fields(array(
		  'id' => $id,
	    'name' => $fields['name'],
	    //'ver' => $fields['ver'],
	    'pei' => $fields['pei'],
	    'cei' => $fields['cei'],
	    //'pid' => $fields['pid'],
	    //'nid' => $fields['nid'],
	    //'txi' => $fields['txi'],
	    //'cbi' => 1, //$fields['cbi'],
			//'cat' => $fields['cat'],
	    //'mbi' => 1, //$fields['mbi'],
			//'mat' => $fields['mat'],
	  ))
		->execute();
	return db_query('select * from {'.$MR.'} where id = :id', array(':id' => $id))->fetchObject();
}

function _sjamayee_create_data_entity($S,$DE,$fields) {
	$id = _sjamayee_create_id($S);
	db_insert($DE)
	  ->fields(array(
		  'id' => $id,
	    'name' => $fields['name'],
	    //'ver' => $fields['ver'],
	    'description' => $fields['description'],
	    'mei' => $fields['mei'],
			'oid' => $fields['oid'],
	    //'txi' => $fields['txi'],
	    //'cbi' => 1, //$fields['cbi'],
			//'cat' => $fields['cat'],
	    //'mbi' => 1, //$fields['mbi'],
			//'mat' => $fields['mat'],
	  ))
		->execute();
	return db_query('select * from {'.$DE.'} where id = :id', array(':id' => $id))->fetchObject();
}

function _sjamayee_create_data_relation($S,$DR,$fields) {
	$id = _sjamayee_create_id($S);
	db_insert($DR)
	  ->fields(array(
		  'id' => $id,
	    'name' => $fields['name'],
	    //'ver' => $fields['ver'],
			'mri' => $fields['mri'],
	    'pei' => $fields['pei'],
	    'cei' => $fields['cei'],
    	//'pid' => $fields['pid'],
    	//'nid' => $fields['nid'],
	    //'txi' => $fields['txi'],
	    //'cbi' => 1, //$fields['cbi'],
			//'cat' => $fields['cat'],
	    //'mbi' => 1, //$fields['mbi'],
			//'mat' => $fields['mat'],
	  ))
		->execute();
	return db_query('select * from {'.$DR.'} where id = :id', array(':id' => $id))->fetchObject();
}

//Link all child relations for one parent by previous and next id's.
function _sjamayee_link_relations($dataset_name, $relations) {
	$previous_relation = null;
	foreach ($relations as $relation) {
		if (!$previous_relation) {
			$previous_relation = $relation;
			continue;
		}
		//Update pid
		db_update($dataset_name)->fields(array('pid' => $previous_relation->id))->condition('id',$relation->id,'=')->execute();
		//Update nid
		db_update($dataset_name)->fields(array('nid' => $relation->id))->condition('id',$previous_relation->id,'=')->execute();
	}
}

function _sjamayee_scramble_project_planning($S,$T,$X,$ME,$MA,$MR,$DE,$DA,$DR) {
	//_sjamayee_load_project_planning_sequences($S);
	_sjamayee_load_project_planning_types($S,$T);
	//_sjamayee_load_project_planning_texts($S,$X);	
	_sjamayee_load_project_planning_calendar($S,$T,$ME,$DE);
	_sjamayee_load_project_planning_resource_types($S,$T,$ME,$DE);
	_sjamayee_load_project_planning_projects($S,$T,$ME,$MR,$DE,$DR);
	_sjamayee_load_project_planning_resources($S,$T,$ME,$MR,$DE,$DR);
	_sjamayee_load_project_planning_projects_resources($S,$T,$ME,$MR,$DE,$DR);
	_sjamayee_load_project_planning_resource_usage($S,$T,$ME,$MR,$DE,$DR);	
}

function _sjamayee_load_project_planning_types($S,$T) {
	$fields = array('type'=>'Project','code'=>'PROJ','name'=>'Project','description'=>'Project definition.','object'=>'sja_project_planning_projects');
	_sjamayee_create_type($S,$T,$fields);
	$fields = array('type'=>'Resource','code'=>'RSRC','name'=>'Resource','description'=>'Resource definition.','object'=>'sja_project_planning_resources');
	_sjamayee_create_type($S,$T,$fields);
	$fields = array('type'=>'ProjectResource','code'=>'PRRS','name'=>'Project Resource','description'=>'Project Resource linkage.','object'=>'sja_project_planning_projects_resources');
	_sjamayee_create_type($S,$T,$fields);
	$fields = array('type'=>'ResourceUsage','code'=>'RUSG','name'=>'Resource Usage','description'=>'Resource usage definition.','object'=>'sja_project_planning_resource_usage');
	_sjamayee_create_type($S,$T,$fields);
	$fields = array('type'=>'ResourceType','code'=>'RTYP','name'=>'Resource Type','description'=>'Resource type definition.','object'=>'sja_project_planning_resource_types');
	_sjamayee_create_type($S,$T,$fields);
	$fields = array('type'=>'CalendarDate','code'=>'CDAT','name'=>'Calendar Date','description'=>'Calendar date definition.','object'=>'sja_project_planning_calendar');
	_sjamayee_create_type($S,$T,$fields);
}

function _sjamayee_load_project_planning_texts($S,$T) {
	return null; //undefined
}

function _sjamayee_load_project_planning_calendar($S,$T,$ME,$DE) {
	$type = db_query('select * from {'.$T.'} where code = :code', array(':code' => 'CDAT'))->fetchObject();
	$dates = db_query('select * from {'.$type->object.'}')->fetchAll();
	$i = 0;
	$model_entity = null;
	foreach ($dates as $date) {
		if ($i == 0) {
			//Calendar model entity.
			$fields = array(
				'name' => $type->name,
				'tid' => $type->id,
		    'description' => $type->description,
			);
			$model_entity = _sjamayee_create_model_entity($S,$ME,$fields);
		}
		//Calendar data entities.
		$fields = array(
			'name' => $date->date,
			'description' => '',
			'mei' => $model_entity->id,
			'oid' => $date->id,
		);
		_sjamayee_create_data_entity($S,$DE,$fields);
		//Increment
		$i++;
  }
}

function _sjamayee_load_project_planning_resource_types($S,$T,$ME,$DE) {
	$type = db_query('select * from {'.$T.'} where code = :code', array(':code' => 'RTYP'))->fetchObject();	
	$resource_types = db_query('select * from {'.$type->object.'}')->fetchAll();
	$i = 0;
	$model_entity = null;
	foreach ($resource_types as $resource_type) {
		if ($i == 0) {
			//ResourceType model entity.
			$fields = array(
				'name' => $type->name,
				'tid' => $type->id,
		    'description' => $type->description,
			);
			$model_entity = _sjamayee_create_model_entity($S,$ME,$fields);
		}
		//ResourceType data entities.
		$fields = array(
			'name' => $resource_type->name,
			'description' => '',
			'mei' => $model_entity->id,
			'oid' => $resource_type->id,
		);
		_sjamayee_create_data_entity($S,$DE,$fields);
		//Increment
		$i++;
  }
}

function _sjamayee_load_project_planning_projects($S,$T,$ME,$MR,$DE,$DR) {
	$type = db_query('select * from {'.$T.'} where code = :code', array(':code' => 'PROJ'))->fetchObject();
	$projects = db_query('select * from {'.$type->object.'}')->fetchAll();
	$i = 0;
	$model_entity = null;
	foreach ($projects as $project) {
		if ($i == 0) {
			//Project model entity.
			$fields = array(
				'name' => $type->name,
				'tid' => $type->id,
		    'description' => $type->description,
			);
			$model_entity = _sjamayee_create_model_entity($S,$ME,$fields);
			//Get calendar date type.
			$dateType = db_query('select * from {'.$T.'} where code = :code', array(':code' => 'CDAT'))->fetchObject();
			//Project_StartDate model entity.
			$fields = array(
				'name' => 'ProjectStartDate',
				'tid' => $dateType->id,
		    'description' => 'Project start date.',
			);
			$model_entity_project_startDate = _sjamayee_create_model_entity($S,$ME,$fields);
			//Project_StartDate model relation.
			$fields = array(
				'name' => 'ProjectStartDate',
				'pei' => $model_entity->id,
				'cei' => $model_entity_project_startDate->id,
			);
			$model_relation_project_startDate = _sjamayee_create_model_relation($S,$MR,$fields);
			//Project_EndDate model entity.
			$fields = array(
				'name' => 'ProjectEndDate',
				'tid' => $dateType->id,
		    'description' => 'Project end date.',
			);
			$model_entity_project_endDate = _sjamayee_create_model_entity($S,$ME,$fields);
			//Project_EndDate model relation.
			$fields = array(
				'name' => 'ProjectEndDate',
				'pei' => $model_entity->id,
				'cei' => $model_entity_project_endDate->id,
				'pid' => $model_relation_project_startDate->id,
			);
			$model_relation_project_endDate = _sjamayee_create_model_relation($S,$MR,$fields);
			//Update nid.
			$model_relation_project_startDate->nid = $model_relation_project_endDate->id;
			db_update($MR)
	      ->fields(array('nid' => $model_relation_project_startDate->nid))
	      ->condition('id', $model_relation_project_startDate->id)
	      ->execute();
		}
		//Project data entity.
		$fields = array(
			'name' => $project->name,
			'description' => $project->description,
			'mei' => $model_entity->id,
			'oid' => $project->id,
		);
		$data_entity = _sjamayee_create_data_entity($S,$DE,$fields);
		//Project_Start_Date data relation.
	  $data_entity_startDate = db_query('select de.* from {'.$DE.'} de left join {'.$ME.'} me on de.mei = me.id '.
																			'left join {'.$T.'} t on me.tid = t.id where  t.code = :code and de.oid = :start_date_id',
																			array(':code' => 'CDAT', ':start_date_id' => $project->start_date_id))->fetchObject();
	/*$data_entity_startDate = db_query('select de.* from {'.$DE.'} de left join {'.$ME.'} me on de.mei = me.id '.
																			' where me.id = :model_entity_project_startDate_id and de.oid = :start_date_id',
																			array(':model_entity_project_startDate_id' => $model_entity_project_startDate->id,
																						':start_date_id' => $project->start_date_id))->fetchObject();*/
		$fields = array(
	    'name' => $project->name.'_StartDate',
	    'mri' => $model_relation_project_startDate->id,
			'pei' => $data_entity->id,
			'cei' => $data_entity_startDate->id,
		);
		$data_relation_project_startDate = _sjamayee_create_data_relation($S,$DR,$fields);
		//Project_End_Date data relation.
	  $data_entity_endDate = db_query('select de.* from {'.$DE.'} de left join {'.$ME.'} me on de.mei = me.id '.
																		'left join {'.$T.'} t on me.tid = t.id where  t.code = :code and de.oid = :end_date_id',
																		array(':code' => 'CDAT', ':end_date_id' => $project->end_date_id))->fetchObject();
	/*$data_entity_endDate = db_query('select de.* from {'.$DE.'} de left join {'.$ME.'} me on de.mei = me.id '.
																		' where me.id = :model_entity_project_endDate_id and de.oid = :end_date_id',
																		array(':model_entity_project_endDate_id' => $model_entity_project_endDate->id,
																					':end_date_id' => $project->end_date_id))->fetchObject();*/
		$fields = array(
	    'name' => $project->name.'_EndDate',
	    'mri' => $model_relation_project_endDate->id,
			'pei' => $data_entity->id,
			'cei' => $data_entity_endDate->id,
			'pid' => $data_relation_project_startDate->id,
		);
		$data_relation_project_endDate = _sjamayee_create_data_relation($S,$DR,$fields);
		//Update nid.
		$data_relation_project_startDate->nid = $data_relation_project_endDate->id;
		db_update($DR)
      ->fields(array('nid' => $data_relation_project_startDate->nid))
      ->condition('id', $data_relation_project_startDate->id)
      ->execute();
		//Increment
		$i++;
  }
}

function _sjamayee_load_project_planning_resources($S,$T,$ME,$MR,$DE,$DR) {
	$type = db_query('select * from {'.$T.'} where code = :code', array(':code' => 'RSRC'))->fetchObject();
	$resources = db_query('select * from {'.$type->object.'}')->fetchAll();
	$i = 0;
	$model_entity = null;
	foreach ($resources as $resource) {
		if ($i == 0) {
			//Resource model entity.			
			$fields = array(
				'name' => $type->name,
				'tid' => $type->id,
		    'description' => $type->description,
			);
			$model_entity = _sjamayee_create_model_entity($S,$ME,$fields);
			//Resource_Type model relation.
			$model_entity_type = db_query('select me.* from {'.$ME.'} me left join {'.$T.'} t on me.tid = t.id '.
			                              'where  t.code = :code', array(':code' => 'RTYP'))->fetchObject();
			$fields = array(
				'name' => 'ResourceType',
				'pei' => $model_entity->id,
				'cei' => $model_entity_type->id,
			);
			$model_relation_resource_type = _sjamayee_create_model_relation($S,$MR,$fields);
		}
		//Resource data entity.		
		$fields = array(
			'name' => $resource->name,
			'description' => '',
			'mei' => $model_entity->id,
			'oid' => $resource->id,
		);
		$data_entity = _sjamayee_create_data_entity($S,$DE,$fields);
		//Resource_Type data relation.
		$data_entity_type = db_query('select de.* from {'.$DE.'} de left join {'.$ME.'} me on de.mei = me.id '.
																 'left join {'.$T.'} t on me.tid = t.id where  t.code = :code and de.oid = :type_id',
																 array(':code' => 'RTYP', ':type_id' => $resource->type_id))->fetchObject();
		$fields = array(
	    'name' => $resource->name.'_Type',
	    'mri' => $model_relation_resource_type->id,
			'pei' => $data_entity->id,
			'cei' => $data_entity_type->id,
		);
		_sjamayee_create_data_relation($S,$DR,$fields);
		//Increment
		$i++;
  }
}

function _sjamayee_load_project_planning_projects_resources($S,$T,$ME,$MR,$DE,$DR) {
	$type = db_query('select * from {'.$T.'} where code = :code', array(':code' => 'PRRS'))->fetchObject();
	$projects_resources = db_query('select * from {'.$type->object.'}')->fetchAll();
	$i = 0;
	$model_entity = null;
	foreach ($projects_resources as $project_resource) {
		if ($i == 0) {
			//ProjectResource model entity.
			$fields = array(
				'name' => $type->name,
				'tid' => $type->id,
		    'description' => $type->description,
			);
			$model_entity = _sjamayee_create_model_entity($S,$ME,$fields);
			//ProjectResource_Project model relation.
			$model_entity_project = db_query('select me.* from {'.$ME.'} me left join {'.$T.'} t on me.tid = t.id '.
			                               	 'where  t.code = :code', array(':code' => 'PROJ'))->fetchObject();
			$fields = array(
				'name' => 'ProjectResourceProject',
				'pei' => $model_entity->id,
				'cei' => $model_entity_project->id,
			);
			$model_relation_projectResource_project = _sjamayee_create_model_relation($S,$MR,$fields);
			//ProjectResource_Resource model relation.
 			$model_entity_resource = db_query('select me.* from {'.$ME.'} me left join {'.$T.'} t on me.tid = t.id '.
                                     		'where  t.code = :code', array(':code' => 'RSRC'))->fetchObject();
			$fields = array(
				'name' => 'ProjectResourceResource',
				'pei' => $model_entity->id,
				'cei' => $model_entity_resource->id,
				'pid' => $model_relation_projectResource_project->id,
			);
			$model_relation_projectResource_resource = _sjamayee_create_model_relation($S,$MR,$fields);
			//Update nid.
			$model_relation_projectResource_project->nid = $model_relation_projectResource_resource->id;
			db_update($MR)
	      ->fields(array('nid' => $model_relation_projectResource_project->nid))
	      ->condition('id', $model_relation_projectResource_project->id)
	      ->execute();
		}
		//ProjectResource data entities.
		$fields = array(
	    'name' => 'P_'.$project_resource->project_id.'_R_'.$project_resource->resource_id,
			'description' => '',
			'mei' => $model_entity->id,
			'oid' => $project_resource->id,
		);
		$data_entity = _sjamayee_create_data_entity($S,$DE,$fields);
		//ProjectResource_Project data relation.
		$data_entity_project = db_query('select de.* from {'.$DE.'} de left join {'.$ME.'} me on de.mei = me.id '.
												  					'left join {'.$T.'} t on me.tid = t.id where  t.code = :code and de.oid = :project_id',
													  				array(':code' => 'PROJ', ':project_id' => $project_resource->project_id))->fetchObject();
		$fields = array(
	    'name' => $data_entity_project->name, //'ProjectResource_Project',
	    'mri' => $model_relation_projectResource_project->id,
			'pei' => $data_entity->id,
			'cei' => $data_entity_project->id,
		);
		$data_relation_projectResource_project = _sjamayee_create_data_relation($S,$DR,$fields);
		//ProjectResource_Resource data relation.
		$data_entity_resource = db_query('select de.* from {'.$DE.'} de left join {'.$ME.'} me on de.mei = me.id '.
												    				 'left join {'.$T.'} t on me.tid = t.id where  t.code = :code and de.oid = :resource_id',
																		 array(':code' => 'RSRC', ':resource_id' => $project_resource->resource_id))->fetchObject();
		$fields = array(
	    'name' => $data_entity_resource->name, //'ProjectResource_Resource',
	    'mri' => $model_relation_projectResource_resource->id,
			'pei' => $data_entity->id,
			'cei' => $data_entity_resource->id,
			'pid' => $data_relation_projectResource_project->id,
		);
		$data_relation_projectResource_resource = _sjamayee_create_data_relation($S,$DR,$fields);
		//Update nid in relation.
		$data_relation_projectResource_project->nid = $data_relation_projectResource_resource->id;
		db_update($DR)
      ->fields(array('nid' => $data_relation_projectResource_project->nid))
      ->condition('id', $data_relation_projectResource_project->id)
      ->execute();
		//Update name in data_entity.
		db_update($DE)
      ->fields(array('name' => $data_entity_project->name.' - '.$data_entity_resource->name))
      ->condition('id', $data_entity->id)
      ->execute();
		//Increment
		$i++;
  }
}

function _sjamayee_load_project_planning_resource_usage($S,$T,$ME,$MR,$DE,$DR) {
	$type = db_query('select * from {'.$T.'} where code = :code', array(':code' => 'RUSG'))->fetchObject();
	$resource_usages = db_query('select * from {'.$type->object.'}')->fetchAll();
	$i = 0;
	$model_entity = null;
	foreach ($resource_usages as $resource_usage) {
		if ($i == 0) {
			//ResourceUsage model entity.
			$fields = array(
				'name' => $type->name,
				'tid' => $type->id,
		    'description' => $type->description,
			);
			$model_entity = _sjamayee_create_model_entity($S,$ME,$fields);
			//ResourceUsage_ProjectResource model relation.
			$model_entity_projectResource = db_query('select me.* from {'.$ME.'} me left join {'.$T.'} t on me.tid = t.id '.
			                               					 'where  t.code = :code', array(':code' => 'PRRS'))->fetchObject();
			$fields = array(
				'name' => 'ResourceUsageProjectResource',
				'pei' => $model_entity->id,
				'cei' => $model_entity_projectResource->id,
			);
			$model_relation_resourceUsage_projectResource = _sjamayee_create_model_relation($S,$MR,$fields);
			//Get calendar date type.
			$dateType = db_query('select * from {'.$T.'} where code = :code', array(':code' => 'CDAT'))->fetchObject();
			//ResourceUsage_Date model entity.
			$fields = array(
				'name' => 'ResourceUsageDate',
				'tid' => $dateType->id,
		    'description' => 'Resource usage date.',
			);
			$model_entity_resourceUsage_date = _sjamayee_create_model_entity($S,$ME,$fields);
			//ResourceUsage_Date model relation.
			$fields = array(
				'name' => 'ResourceUsageDate',
				'pei' => $model_entity->id,
				'cei' => $model_entity_resourceUsage_date->id,
			);
			$model_relation_resourceUsage_date = _sjamayee_create_model_relation($S,$MR,$fields);
		}
		//ResourceUsage data entity.
		$fields = array(
	    'name' => 'ResourceUsage', //NOK -> project->name . resource->name !!!
			'description' => '',
			'mei' => $model_entity->id,
			'oid' => $resource_usage->id,
		);
		$data_entity = _sjamayee_create_data_entity($S,$DE,$fields);
		//ResourceUsage_ProjectResource data relation.
		$data_entity_projectResource = db_query('select de.* from {'.$DE.'} de left join {'.$ME.'} me on de.mei = me.id '.
																						'left join {'.$T.'} t on me.tid = t.id where  t.code = :code and de.oid = :project_resource_id',
																						array(':code' => 'PRRS', ':project_resource_id' => $resource_usage->project_resource_id))->fetchObject();
		$fields = array(
	    'name' => $data_entity_projectResource->name, //'ResourceUsage_ProjectResource',
	    'mri' => $model_relation_resourceUsage_projectResource->id,
			'pei' => $data_entity->id,
			'cei' => $data_entity_projectResource->id,
		);
		$data_relation_resourceUsage_projectResource = _sjamayee_create_data_relation($S,$DR,$fields);
		//ResourceUsage_Date data relation.
	  $data_entity_resourceUsage_date = db_query('select de.* from {'.$DE.'} de left join {'.$ME.'} me on de.mei = me.id '.
																	 						 'left join {'.$T.'} t on me.tid = t.id where t.code = :code and de.oid = :resourceUsage_date_id',
																							 array(':code' => 'CDAT', ':resourceUsage_date_id' => $resource_usage->date_id))->fetchObject();
	/*$data_entity_resourceUsage_date = db_query('select de.* from {'.$DE.'} de left join {'.$ME.'} me on de.mei = me.id '.
																	 						 ' where me.id = :model_entity_resourceUsage_date_id and de.oid = :resourceUsage_date_id',
																							 array(':model_entity_resourceUsage_data_id' => $model_entity_resourceUsage_date->id,
																										 ':resourceUsage_date_id' => $resource_usage->date_id))->fetchObject();*/
		$fields = array(
	    'name' => $data_entity_resourceUsage_date->name, //'ResourceUsage_Date',
	    'mri' => $model_relation_resourceUsage_date->id,
			'pei' => $data_entity->id,
			'cei' => $data_entity_resourceUsage_date->id,
			'pid' => $data_relation_resourceUsage_projectResource->id,
		);
		$data_relation_resourceUsage_date = _sjamayee_create_data_relation($S,$DR,$fields);
		//Update nid in relation.
		$data_relation_resourceUsage_projectResource->nid = $data_relation_resourceUsage_date->id;
		db_update($DR)
      ->fields(array('nid' => $data_relation_resourceUsage_projectResource->nid))
      ->condition('id', $data_relation_resourceUsage_projectResource->id)
      ->execute();
		//Update name in data_entity.
		db_update($DE)
      ->fields(array('name' => $data_entity_projectResource->name.' - '.$data_entity_resourceUsage_date->name))
      ->condition('id', $data_entity->id)
      ->execute();
		//Increment
		$i++;
  }
}

function _sjamayee_scramble_drupal($S,$T,$X,$ME,$MA,$MR,$DE,$DA,$DR) {
	//Define drupal datasets.
	$C    = 'comment';
	$FC   = 'field_config';
	$FCI  = 'field_config_instance';
	$M    = 'menu_custom';
	$N    = 'node';
	$NT   = 'node_type';
	$TTD  = 'taxonomy_term_data';

	//Define types.
	$TYPE_BUNDLE = 'BUND';
	$TYPE_COMMENT = 'COMM';
	$TYPE_FIELD = 'FLD';
	$TYPE_MENU = 'MENU';
	$TYPE_MODULE = 'MODU';
	$TYPE_NODE = 'NODE';
	$TYPE_TAXONOMY = 'TAXO';
/*	
	//Clear datasets.
	db_delete($S)->execute();
	db_delete($T)->execute();
	//db_delete($X)->execute();
	db_delete($ME)->execute();
	//db_delete($MA)->execute();
	db_delete($MR)->execute();
	db_delete($DE)->execute();
	//db_delete($DA)->execute();
	db_delete($DR)->execute();
*/
	//************
	//Create Types
	//************
	$fields = array('type'=>'Menu','code'=>$TYPE_MENU,'name'=>'Menu','description'=>'Menu','object'=>'undefined');
	_sjamayee_create_type($S,$T,$fields);
	$fields = array('type'=>'Node','code'=>$TYPE_NODE,'name'=>'Node','description'=>'Node','object'=>$N);
	_sjamayee_create_type($S,$T,$fields);
	$fields = array('type'=>'Comment','code'=>$TYPE_COMMENT,'name'=>'Comment','description'=>'Comment','object'=>'undefined');
	_sjamayee_create_type($S,$T,$fields);
	$fields = array('type'=>'Taxonomy','code'=>$TYPE_TAXONOMY,'name'=>'Taxonomy Term','description'=>'Taxonomy term','object'=>'undefined');
	_sjamayee_create_type($S,$T,$fields);
	$fields = array('type'=>'Field','code'=>$TYPE_FIELD,'name'=>'Field','description'=>'Field','object'=>$FC);
	_sjamayee_create_type($S,$T,$fields);
	$fields = array('type'=>'Bundle','code'=>$TYPE_BUNDLE,'name'=>'Bundle','description'=>'Bundle','object'=>'undefined');
	_sjamayee_create_type($S,$T,$fields);
	$fields = array('type'=>'Module','code'=>$TYPE_MODULE,'name'=>'Module','description'=>'Module','object'=>'undefined');
	_sjamayee_create_type($S,$T,$fields);

	//************
	//Create Texts
	//************
	//Example text, but not needed for this demo.
	$fields = array(
		'par' => 'p01',
		'seq' => 1,
		'text' => 'This is a long text.',
		'object'=>'undefined');
	_sjamayee_create_text($S,$X,$fields);

	//***********************************************************************
	//Create Model Entities: Node,Comment,Taxonomy,Field,Module,Bundle,Entity
	//***********************************************************************
	$model_entities = array();
	$mes = db_query('select id as tid from {'.$T.'}'.
	         				' where code = :code', array(':code' => $TYPE_MENU));
	foreach ($mes as $me) {
		$me->name = strtolower($TYPE_MENU);
		$me->description = ucfirst(strtolower($TYPE_MENU));
		$model_entities[] = $me;
	}
	$mes = db_query('select nt.type name,t.id as tid,nt.name description from {'.$T.'} t, {'.$NT.'} nt '.
	  							' where t.code = :code', array(':code' => $TYPE_NODE));
	foreach ($mes as $me) { $model_entities[] = $me; }
	$mes = db_query('select id as tid from {'.$T.'} '.
	   							' where code = :code', array(':code' => $TYPE_COMMENT));
	foreach ($mes as $me) {
		$me->name = 'comment';
		$me->description = 'Comment description';
		$model_entities[] = $me;
	}
	$mes = db_query('select id as tid from {'.$T.'} '.
	  							' where code = :code', array(':code' => $TYPE_TAXONOMY));
	foreach ($mes as $me) {
		$me->name = 'taxonomy_term';
		$me->description = 'Taxonomy term';
		$model_entities[] = $me;
	}
	$mes = db_query('select fc.field_name name,t.id as tid,fc.field_name description from {'.$T.'} t, {'.$FC.'} fc '.
	     						' where t.code = :code', array(':code' => $TYPE_FIELD));
	foreach ($mes as $me) { $model_entities[] = $me; }
	$mes = db_query('select id as tid from {'.$T.'} '.
	  						  ' where code = :code', array(':code' => $TYPE_MODULE));
	foreach ($mes as $me) {
		$me->name = 'module';
		$me->description = 'Module';
		$model_entities[] = $me;
	}
	$mes = db_query('select id as tid from {'.$T.'} '.
	     						' where code = :code', array(':code' => $TYPE_BUNDLE));
	foreach ($mes as $me) {
		$me->name = 'bundle';
		$me->description = 'Bundle';
		$model_entities[] = $me;
	}
	//Finally create model entities!
	foreach ($model_entities as $model_entity) {
		$fields = array(
	    'name' => $model_entity->name,
			'tid' => $model_entity->tid,
			'description' => $model_entity->description,
		);
		_sjamayee_create_model_entity($S,$ME,$fields);
	}
	
	//***********************
	//Create Model Relations.
	//***********************
	$model_relations = array();
	//Menu_Menu
	$mrs = db_query('select pme.name as pme_name,cme.name as cme_name,'.
								  '       pme.id as pei,cme.id as cei '.
		       				'  from {'.$T.'} pt, {'.$ME.'} pme, '.
		       				'       {'.$T.'} ct, {'.$ME.'} cme  '.
		       				' where pt.code = :pt_code and '.
		       				'       pt.id = pme.tid and '.
		       				'       ct.code = :ct_code and '.
		       				'	      ct.id = cme.tid',array(':pt_code' => $TYPE_MENU, ':ct_code' => $TYPE_MENU));
	foreach ($mrs as $mr) {
		$model_relation->name = $mr->pme_name.'_'.$mr->cme_name;
		$model_relation->pei = $mr->pei;
		$model_relation->cei = $mr->cei;
		array_push($model_relations,$model_relation);
	}
	//Node_Comment
	$mrs = db_query('select pme.name as pme_name, cme.name as cme_name,'.
								  '	 		  pme.id as pei,cme.id as cei '.
		    					'  from {'.$T.'} pt, {'.$ME.'} pme, '.
		    					'       {'.$T.'} ct, {'.$ME.'} cme  '.
		    					' where pt.code = :pt_code and '.
		    					'       pt.id = pme.tid and '.
		    					'       ct.code = :ct_code and '.
		    					'	      ct.id = cme.tid',array(':pt_code' => $TYPE_NODE, ':ct_code' => $TYPE_COMMENT));
	foreach ($mrs as $mr) {
		$model_relation->name = $mr->pme_name.'_'.$mr->cme_name;
		$model_relation->pei = $mr->pei;
		$model_relation->cei = $mr->cei;
		array_push($model_relations,$model_relation);
	}
	//Taxonomy_Field, Comment_Field, Node_Field
/*$mrs = db_query('select pme.name as pme_name,cme.name as cme_name,'.
									'			  pme.id as pei,cme.id as cei '.
		       				'  from {'.$T.'} pt, {'.$ME.'} pme, {'.$FCI.'} fci, '.
		       				'       {'.$T.'} ct, {'.$ME.'} cme  '.
		       				' where ct.code = :ct_code and '.
		       				'       ct.id = cme.tid and '.
		       				'       cme.name = fci.field_name and '.
		       				'       ((fci.entity_type = pme.name and pme.tid = pt.id and pt.code in ("'.$TYPE_TAXONOMY.'","'.$TYPE_COMMENT.'")) or '.
		       				'        (fci.bundle = pme.name and pme.tid = pt.id and pt.code = "'.$TYPE_NODE.'"))',
									array(':pt_code' => $TYPE_NODE,':ct_code' => $TYPE_FIELD));*/
	//Module_Field
/*$mrs = db_query('select pme.name as pme_name,cme.name as cme_name,'.
									'			  pme.id as pei,cme.id a cei '.
		       				'  from {'.$T.'} pt, {'.$ME.'} pme, '.
		       				'       {'.$T.'} ct, {'.$ME.'} cme  '.
		       				' where pt.code = :pt_code and '.
		       				'       pt.id = pme.tid and '.
		       				'       ct.code = :ct_code and '.
		       				'	      ct.id = cme.tid',array(':pt_code' => $TYPE_MODULE, ':ct_code' => $TYPE_FIELD));*/
	foreach ($mrs as $mr) {
		$model_relation->name = $mr->pme_name.'_'.$mr->cme_name;
		$model_relation->pei = $mr->pei;
		$model_relation->cei = $mr->cei;
		array_push($model_relations,$model_relation);
	}
	//Bundle_Field
	$mrs = db_query('select pme.name as pme_name,cme.name as cme_name, '.
								  '			  pme.id as pei,cme.id as cei '.
		       				'  from {'.$T.'} pt, {'.$ME.'} pme, '.
		       				'       {'.$T.'} ct, {'.$ME.'} cme  '.
		       				' where pt.code = :pt_code and '.
		       				'       pt.id = pme.tid and '.
		       				'       ct.code = :ct_code and '.
		       				'	      ct.id = cme.tid',array(':pt_code' => $TYPE_BUNDLE, ':ct_code' => $TYPE_FIELD));
	foreach ($mrs as $mr) {
		$model_relation->name = $mr->pme_name.'_'.$mr->cme_name;
		$model_relation->pei = $mr->pei;
		$model_relation->cei = $mr->cei;
		array_push($model_relations,$model_relation);
	}	
  //And finally - Create!
	foreach ($model_relations as $model_relation) {
		$fields = array(
	    'name' => $model_relation->name,
			'pei' => $model_relation->pei,
			'cei' => $model_relation->cei,
		);
		_sjamayee_create_model_relation($S,$MR,$fields);
	}
/*
	//TODO: Check links !!!
	//***********************************************************
	//Link Model Relations / All children for each parent entity.
	//***********************************************************
	$model_entities = db_select($ME)->execute();
	foreach ($model_entities as $model_entity) {
		$model_relations = db_select($MR,'mr')->condition('mr.pei',$model_entity->id,'=')->execute();
		_sjamayee_link_relations($MR,$model_relations);
	}
  //TODO *********************************************************************************************************************** TODO !!!
	//Link MENU model relations.
  /*$relations = db_query('select * from {'.$MR.'} mr, {'.$ME.'} me, {'.$T.'} t '.
													' where t.code = :code and '.
													'       t.id = me.tid and '.
													'       mr.pei = me.id', array(':code' => $TYPE_MENU))->fetch();
	_link_relations($MR,$relations);
*/
	//*************************************************
	//Create Data Entities: Node,Comment,Taxonomy,Field
	//*************************************************
	$data_entities = array();
/*//Menus
	$data_entities += db_query('select m.menu_name as name,m.title as description,me.id as mei,1 as oid '.
		       								 	 '  from {'.$T.'} t, {'.$ME.'} me, {'.$M.'} m '.
		       								 	 ' where t.code = "'.$TYPE_MENU.'" and '.
		       								 	 '       t.id = me.tid');
	//Nodes
	$data_entities += db_query('select n.title as n ame,"" as description,me.id as mei,n.nid as oid '.
		       								 	 '  from {'.$T.'} t, {'.$ME.'} me, {'.$N.'} n '.
		       								 	 ' where t.code = "'.$TYPE_NODE.'" and '.
		       								 	 '       t.id = me.tid '.
		       								 	 '       me.name = n.type');
	//Taxonomy
	$data_entities += db_query('select ttd.name as name,ttd.description as description,me.id as mei,ttd.tid as oid '.
		       								 	 '  from {'.$T.'} t, {'.$ME.'} me, {'.$TTD.'} ttd '.
		       								 	 ' where t.code = "'.$TYPE_TAXONOMY.'" and '.
		       								 	 '       t.id = me.tid');
	//Comments
	$data_entities += db_query('select c.subject as name,c.subject as description,me.id as mei,c.cid as oid '.
		       								 	 '  from {'.$T.'} t, {'.$ME.'} me, {'.$C.'} c '.
		       								 	 ' where t.code = "'.$TYPE_COMMENT.'" and '.
		       								 	 '       t.id = me.tid');
	//Modules
	$data_entities += db_query('select max(fc.module) as name,max(fc.module) as description,me.id as mei,1 as oid '.
		       								 	 '  from {'.$T.'} t, {'.$ME.'} me, {'.$FC.'} fc '.
		       								 	 ' where t.code = "'.$TYPE_MODULE.'" and '.
		       								 	 '       t.id = me.tid'.
					 								 	 'group by fc.module');
	//Bundles
	$data_entities += db_query('select max(fci.bundle) as name,max(fci.bundle) as description,me.id as mei,1 as oid '.
		       									 '  from {'.$T.'} t, {'.$ME.'} me, {'.$FCI.'} fci '.
		       								 	 ' where t.code = "'.$TYPE_BUNDLE.'" and '.
		       								 	 '       t.id = me.tid'.
					 								 	 'group by fci.bundle');
*/
  //Create
	foreach ($data_entities as $data_entity) {
		$fields = array(
	    'name' => $data_entity->name,
			'description' => $data_entity->description,
			'mei' => $data_entity->mei,
			'oid' => $data_entity->oid,
		);
		_sjamayee_create_data_entity($S,$DE,$fields);
	}

	//Fields                        *** TODO / ALREADY PREPARED !!! ***
	$fieldName = null;
	$fieldNames = db_query('select fc.field_name from {'.$T.'} t, {'.$ME.'} me, {'.$FC.'} fc '.
	                       ' where t.code = :code and t.id = me.tid and me.name = fc.field_name',array(':code' => $TYPE_FIELD));
	$fieldDataSetName = 'field_data_'.$fieldName;
  $fieldValueName = $fieldName.'_value';	
	$data_relations = array();
/*foreach ($fieldNames as $fieldName) {
		$fieldData = db_query('select entity_type,bundle,deleted,entity_id,revision_id,'.$fieldValueName.' as field_value '.
		                      '  from '.$fieldDataSetName);
		foreach ($fieldData as $data) {
      //Insert Data Entity - Field  ----------------------------------------------- *** GET THE LATEST VERSION !!! **** ONLY 1 ***
			$data_entity = db_query('select '.$data->field_value.' as name,'.
																				concat($fieldValueName,'_',$data->field_value).' as description,me.id as mei,fc.id as oid '.
				       								'  from {'.$T.'} t, {'.$ME.'} me, {'.$FC.'} fc '.
				       								' where t.code = "'.$TYPE_FIELD.'" and '.
				       								'       t.id = me.tid and '.
				       								'       me.name = fc.field_name and '.
				       								'       fc.field_name = :fieldName',array(':fieldName' => $fieldName));
			//Create.
			$fields = array(
		    'name' => $data_entity->name,
				'description' => $data_entity->description,
				'mei' => $data_entity->mei,
				'oid' => $data_entity->oid,
			);
			_sjamayee_create_data_entity($S,$DE,$fields);

			//Get Data Relations - Module_Field
			$data_relations += db_query('select concat(pde.name,"_",cme.name) as name,'.
																	'				mr.id as mri,pde.id as pei,cde.id as cei '.
				       										'  from {'.$T.'} pt, {'.$ME.'} pme, {'.$DE.'} pde, '.
				       										'       {'.$T.'} ct, {'.$ME.'} cme, {'.$DE.'} cde, '.
				       										'       {'.$MR.'} mr, {'.$FC.'} fc '.
				       										' where pt.code = "'.$TYPE_MODULE.'" and '.
				       										' 		  pt.id = pme.tid and '.
				       										' 			pde.name = fc.module and '.
				       										' 			pme.id = mr.pei and '.
				       										' 			pme.id = pde.mei and '.
				       										' 			ct.code = "'.$TYPE_FIELD.'" and '.
				       										' 			ct.id = cme.tid and '.
				       										' 			cde.name = fc.field_name and '.
				       										' 			cme.id = mr.cei and '.
				       										' 			cme.id = cde.mei and '.
				       										' 			cde.oid = fc.id and '.
				       										' 			fc.field_name = :fieldName',array(':fieldName' => $fieldName));
      //Get Data Relations - Bundle_Field      
			$data_relations += db_query('select concat(pde.name,"_",cme.name) as name,'.
																	'				mr.id as mri,pde.id,cde.id as cei '.
				       										'  from {'.$T.'} pt, {'.$ME.'} pme, {'.$DE.'} pde, '.
				       										'       {'.$T.'} ct, {'.$ME.'} cme, {'.$DE.'} cde, '.
				       										'       {'.$MR.'} mr, {'.$FCI.'} fci '.
				       										' where pt.code = "'.$TYPE_BUNDLE.'" and '.
				       										' 			 pt.id = pme.tid and '.
				       										' 			 pde.name = fci.bundle and '.
				       										' 			 pme.id = mr.pei and '.
				       										' 			 pme.id = pde.mei and '.
				       										' 			 ct.code = "'.$TYPE_FIELD.'" and '.
				       										' 			 ct.id = cme.tid and '.
				       										' 			 cde.name = fci.field_name and '.
				       										' 			 cme.id = mr.cei and '.
				       										' 			 cme.id = cde.mei and '.
				       										' 			 cde.oid = fci.field_id and '.
				       										' 			 fci.field_name = :fieldName',array(':fieldName' => $fieldName));
      //Get Data Relations - Entity_Field (Comment, Taxonomy, Nodes...)
      //Comments
			$data_relations += db_query('select concat(pde.name,"_",cme.name) as name,'.
																	'				mr.id as mri,pde.id as pei,cde.id as cei '.
				       										'  from {'.$T.'} pt, {'.$ME.'} pme, {'.$DE.'} pde, '.
				       										'       {'.$T.'} ct, {'.$ME.'} cme, {'.$DE.'} cde, '.
				       										'       {'.$MR.'} mr, {'.$FCI.'} fci '.
				       										' where pt.code = "'.$TYPE_COMMENT.'" and '.
				       										' 			pt.id = pme.tid and '.
				       										' 			pde.name = fci.entity_type and '.
				       										' 			pme.id = mr.pei and '.
				       										' 			pme.id = pde.mei and '.
				       										' 			ct.code = "'.$TYPE_FIELD.'" and '.
				       										' 			ct.id = cme.tid and '.
				       										' 			cde.name = fci.field_name and '.
				       										' 			cme.id = mr.cei and '.
				       										' 			cme.id = cde.mei and '.
				       										' 			cde.oid = fci.field_id and '.
				       										' 			fci.field_name = :fieldName',array(':fieldName' => $fieldName));
      //Taxonomy terms
			$data_relations += db_query('select concat(pde.name,"_",cme.name) as name,'.
																	'				mr.id as mri,pde.id as pei,cde.id as cei '.
				       										'  from {'.$T.'} pt, {'.$ME.'} pme, {'.$DE.'} pde, '.
				       										'       {'.$T.'} ct, {'.$ME.'} cme, {'.$DE.'} cde, '.
				       										'       {'.$MR.'} mr, {'.$FCI.'} fci '.
				       										' where pt.code = "'.$TYPE_TAXONOMY.'" and '.
				       										' 			pt.id = pme.tid and '.
				       										' 			pde.name = fci.entity_type and '.
				       										' 			pme.id = mr.pei and '.
				       										' 			pme.id = pde.mei and '.
				       										' 			ct.code = "'.$TYPE_FIELD.'" and '.
				       										' 			ct.id = cme.tid and '.
				       										' 			cde.name = fci.field_name and '.
				       										' 			cme.id = mr.cei and '.
				       										' 			cme.id = cde.mei and '.
				       										' 			cde.oid = fci.field_id and '.
				       										' 			fci.field_name = :fieldName',array(':fieldName' => $fieldName));
      //Nodes (like: Article, Page, Recipe, ...)
			$data_relations += db_query('select concat(pde.name,"_",cme.name) as name,'.
																	'				mr.id as mri,pde.id as pei,cde.id as cei '.
				       										'  from {'.$T.'} pt, {'.$ME.'} pme, {'.$DE.'} pde, '.
				       										'       {'.$T.'} ct, {'.$ME.'} cme, {'.$DE.'} cde, '.
				       										'       {'.$MR.'} mr, {'.$FCI.'} fci '.
				       										' where pt.code = "'.$TYPE_NODE.'" and '.
				       										' 			pt.id = pme.tid and '.
				       										' 			fci.entity_type = $N and '.
				       										' 			pme.id = mr.pei and '.
				       										' 			pme.id = pde.mei and '.
				       										' 			ct.code = "'.$TYPE_FIELD.'" and '.
				       										' 			ct.id = cme.tid and '.
				       										' 			cde.name = fci.field_name and '.
				       										' 			cme.id = mr.cei and '.
				       										' 			cme.id = cde.mei and '.
				       										' 			cde.oid = fci.field_id and '.
				       										' 			fci.field_name = :fieldName',array(':fieldName' => $fieldName));
		}
		//Get Data Relations - Node_Comment
		$data_relations += db_query('select concat(n.title,"_",c.subject) as name,'.
																'				mr.id as mri,pde.id as pei,cde.id as cei '.
			       										'  from {'.$T.'} pt, {'.$DE.'} pde, {'.$ME.'} pme, {'.$N.'} n, '.
			       										'       {'.$T.'} ct, {'.$DE.'} cde, {'.$ME.'} cme, {'.$C.'} c '.
			       										'       {'.$MR.'} mr '.
			       										' where pt.code = "'.$TYPE_NODE.'" and '.
			       										'       n.nid = c.nid and '.
			       										'       n.type = pme.name and '.
			       										'       pme.tid = pt.id and '.
			       										'       pme.id = mr.pei and '.
			       										'       pde.mei = pme.id and '.
			       										'       pde.oid = n.nid and '.
			       										'       ct.code = "'.$TYPE_COMMENT.'" and '.
			       										'       cme.tid = ct.id and '.
			       										'       cme.id = mr.cei and '.
			       										'       cde.mei = cme.id and '.
			       										'       cde.oid = c.cid');
			
		//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		//TODO: Complete creation of Data Relations. !!!
		//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		
		//**********************
		//Create Data Relations.
		//**********************
		foreach ($data_relations as $data_relation) {
			$fields = array(
		    'name' => $data_relation->name,
		    'mri' => $data_relation->mri,
				'pei' => $data_relation->pei,
				'cei' => $data_relation->cei,
			);
			_sjamayee_create_data_relation($S,$DR,$fields);
		}
	}*/
}
